router.post("/login", async (req, res) => {
    try {
        const user = await User.findOne(
            {
                userName: req.body.username
            }
        );
        if (!user) {
            res.status(401).json("Incorrect username login!");
            return;
        }

        const hashedPassword = CryptoJS.AES.decrypt(user.password, process.env.PASS_SEC);
        const originalPassword = hashedPassword.toString(CryptoJS.enc.Utf8);

        if (originalPassword !== req.body.password) {
            res.status(401).json("Incorrect password!");
            return;
        }

        const accessToken = jwt.sign({
            id: user._id,
            isAdmin: user.isAdmin,
        },
            process.env.JWT_SEC,
            { expiresIn: "3d" }
        );

        const { password, ...others } = user._doc;

        res.status(200).json({ ...others, accessToken });
    } catch (error) {
        res.status(500).json(error);
    }
})